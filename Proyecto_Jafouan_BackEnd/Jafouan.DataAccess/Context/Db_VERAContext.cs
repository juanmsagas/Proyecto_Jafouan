// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Jafouan.Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Jafouan.DataAccess.Context
{
    public partial class Db_VERAContext : DbContext
    {
        public Db_VERAContext()
        {
        }

        public Db_VERAContext(DbContextOptions<Db_VERAContext> options)
            : base(options)
        {
        }

        public virtual DbSet<VW_Cargos> VW_Cargos { get; set; }
        public virtual DbSet<VW_Categorias> VW_Categorias { get; set; }
        public virtual DbSet<VW_Clientes> VW_Clientes { get; set; }
        public virtual DbSet<VW_Departamentos> VW_Departamentos { get; set; }
        public virtual DbSet<VW_Descuentos> VW_Descuentos { get; set; }
        public virtual DbSet<VW_Empleados> VW_Empleados { get; set; }
        public virtual DbSet<VW_EstadosCiviles> VW_EstadosCiviles { get; set; }
        public virtual DbSet<VW_FacturaDetalles> VW_FacturaDetalles { get; set; }
        public virtual DbSet<VW_Facturas> VW_Facturas { get; set; }
        public virtual DbSet<VW_Fardos> VW_Fardos { get; set; }
        public virtual DbSet<VW_FardosProveedores> VW_FardosProveedores { get; set; }
        public virtual DbSet<VW_Marcas> VW_Marcas { get; set; }
        public virtual DbSet<VW_MetodosPagos> VW_MetodosPagos { get; set; }
        public virtual DbSet<VW_Municipios> VW_Municipios { get; set; }
        public virtual DbSet<VW_Pantallas> VW_Pantallas { get; set; }
        public virtual DbSet<VW_Prendas> VW_Prendas { get; set; }
        public virtual DbSet<VW_Proveedores> VW_Proveedores { get; set; }
        public virtual DbSet<VW_Roles> VW_Roles { get; set; }
        public virtual DbSet<VW_Sucursales> VW_Sucursales { get; set; }
        public virtual DbSet<VW_Usuarios> VW_Usuarios { get; set; }
        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbCategorias> tbCategorias { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbDescuentos> tbDescuentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbFacturaDetalles> tbFacturaDetalles { get; set; }
        public virtual DbSet<tbFacturas> tbFacturas { get; set; }
        public virtual DbSet<tbFardos> tbFardos { get; set; }
        public virtual DbSet<tbFardosProveedor> tbFardosProveedor { get; set; }
        public virtual DbSet<tbMarcas> tbMarcas { get; set; }
        public virtual DbSet<tbMetodosPagos> tbMetodosPagos { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRol> tbPantallasPorRol { get; set; }
        public virtual DbSet<tbPrendas> tbPrendas { get; set; }
        public virtual DbSet<tbProveedores> tbProveedores { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<VW_Cargos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Cargos", "mant");

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.carg_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.carg_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_Categorias>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Categorias", "vera");

                entity.Property(e => e.cate_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.cate_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.cate_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.cate_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_Clientes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Clientes", "vera");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.clieSexo)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.clie_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.clie_Direccion).HasMaxLength(200);

                entity.Property(e => e.clie_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.clie_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.clie_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.clie_Identidad)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.clie_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.clie_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.clie_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<VW_Departamentos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Departamentos", "mant");

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.dept_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.dept_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_Descuentos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Descuentos", "vera");

                entity.Property(e => e.desc_Color)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.desc_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.desc_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.desc_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VW_Empleados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Empleados", "vera");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.emplSexo)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.empl_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Direccion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empl_Identidad)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<VW_EstadosCiviles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_EstadosCiviles", "mant");

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.estc_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.estc_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.estc_Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<VW_FacturaDetalles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FacturaDetalles", "fact");

                entity.Property(e => e.fade_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.fade_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.fade_Total).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.pren_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<VW_Facturas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Facturas", "fact");

                entity.Property(e => e.clie_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.clie_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fact_Fecha).HasColumnType("datetime");

                entity.Property(e => e.fact_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.fact_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.meto_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<VW_Fardos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Fardos", "vera");

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fard_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.fard_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.fard_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.fard_Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<VW_FardosProveedores>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_FardosProveedores", "vera");

                entity.Property(e => e.fapr_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.fapr_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.fard_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.prov_Nombre)
                    .IsRequired()
                    .HasMaxLength(400);
            });

            modelBuilder.Entity<VW_Marcas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Marcas", "vera");

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.marc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.marc_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.marc_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.marc_Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<VW_MetodosPagos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_MetodosPagos", "fact");

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.meto_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.meto_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.meto_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.meto_Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<VW_Municipios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Municipios", "mant");

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.muni_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.muni_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<VW_Pantallas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Pantallas", "acce");

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.pant_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.pant_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.pant_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.pant_Identificador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pant_href)
                    .IsRequired()
                    .HasMaxLength(70);
            });

            modelBuilder.Entity<VW_Prendas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Prendas", "vera");

                entity.Property(e => e.cate_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.desc_Color)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fard_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.marc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pren_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pren_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.pren_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pren_Imagen).IsRequired();

                entity.Property(e => e.pren_Precio).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.pren_Talla)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<VW_Proveedores>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Proveedores", "vera");

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.prov_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.prov_Direccion).HasMaxLength(200);

                entity.Property(e => e.prov_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.prov_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.prov_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.prov_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<VW_Roles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Roles", "acce");

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.role_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.role_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.role_Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<VW_Sucursales>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Sucursales", "vera");

                entity.Property(e => e.empl_Modifica)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empl_crea)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.sucu_Direccion).HasMaxLength(200);

                entity.Property(e => e.sucu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<VW_Usuarios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_Usuarios", "acce");

                entity.Property(e => e.EsAdmin)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.empl_Crea).HasMaxLength(401);

                entity.Property(e => e.empl_Modifica).HasMaxLength(401);

                entity.Property(e => e.nombreEmpleado)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.role_Descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.user_Contraseña)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.user_FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.user_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.user_NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.carg_Id)
                    .HasName("PK_mant_tbCargos_carg_Id");

                entity.ToTable("tbCargos", "mant");

                entity.HasIndex(e => e.carg_Descripcion, "UQ_mant_tbCargos_carg_Descripcion")
                    .IsUnique();

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.carg_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.carg_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbCategorias>(entity =>
            {
                entity.HasKey(e => e.cate_Id)
                    .HasName("PK_vera_tbCategorias_cate_Id");

                entity.ToTable("tbCategorias", "vera");

                entity.HasIndex(e => e.cate_Descripcion, "UQ_mant_tbCategorias_cate_Descripcion")
                    .IsUnique();

                entity.Property(e => e.cate_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.cate_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.cate_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cate_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.clie_Id)
                    .HasName("PK_vera_tbClientes_clie_Id");

                entity.ToTable("tbClientes", "vera");

                entity.Property(e => e.clie_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.clie_Direccion).HasMaxLength(200);

                entity.Property(e => e.clie_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.clie_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.clie_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.clie_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.clie_Identidad)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.clie_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.clie_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.clie_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.estc)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.estc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbClientes_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbClientes_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.dept_Id)
                    .HasName("PK_mant_tbDepartamentos_dept_Id");

                entity.ToTable("tbDepartamentos", "mant");

                entity.HasIndex(e => e.dept_Descripcion, "UQ_mant_tbDepartamentos_dept_Descripcion")
                    .IsUnique();

                entity.Property(e => e.dept_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.dept_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.dept_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.dept_FechaModifica).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbDescuentos>(entity =>
            {
                entity.HasKey(e => e.desc_Id)
                    .HasName("PK_vera_tbDescuentos_desc_Id");

                entity.ToTable("tbDescuentos", "vera");

                entity.Property(e => e.desc_Color)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.desc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.desc_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.desc_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.empl_Id)
                    .HasName("PK_vera_tbEmpleados_empl_Id");

                entity.ToTable("tbEmpleados", "vera");

                entity.Property(e => e.empl_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Direccion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.empl_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empl_Identidad)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.empl_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.carg)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.carg_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbEmpleados_tbCargos_carg_Id");

                entity.HasOne(d => d.estc)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.estc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbEmpleados_tbEstadosCiviles_estc_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbEmpleados_tbMunicipios_muni_Id");

                entity.HasOne(d => d.sucu)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.sucu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbEmpleados_tbSucursales_sucu_Id");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.estc_Id)
                    .HasName("PK_mant_tbEstadosCiviles_estc_Id");

                entity.ToTable("tbEstadosCiviles", "mant");

                entity.HasIndex(e => e.estc_Descripcion, "UQ_mant_tbEstadosCiviles_estc_Descripcion")
                    .IsUnique();

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.estc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.estc_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.estc_FechaModifica).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbFacturaDetalles>(entity =>
            {
                entity.HasKey(e => e.fade_Id)
                    .HasName("PK_fact_tbFacturaDetalles_fade_Id");

                entity.ToTable("tbFacturaDetalles", "fact");

                entity.Property(e => e.fade_Cantidad).HasDefaultValueSql("((1))");

                entity.Property(e => e.fade_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.fade_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.fade_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.fade_Total).HasColumnType("decimal(8, 2)");

                entity.HasOne(d => d.fact)
                    .WithMany(p => p.tbFacturaDetalles)
                    .HasForeignKey(d => d.fact_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturaDetalles_tbFacturas_fact_Id");

                entity.HasOne(d => d.pren)
                    .WithMany(p => p.tbFacturaDetalles)
                    .HasForeignKey(d => d.pren_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturaDetalles_vera_tbPrendas_fact_Id");
            });

            modelBuilder.Entity<tbFacturas>(entity =>
            {
                entity.HasKey(e => e.fact_Id)
                    .HasName("PK_fact_tbFacturas_fact_Id");

                entity.ToTable("tbFacturas", "fact");

                entity.Property(e => e.fact_Fecha).HasColumnType("datetime");

                entity.Property(e => e.fact_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.fact_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.clie)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.clie_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturas_vera_tbClientes_clie_Id");

                entity.HasOne(d => d.empl)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturas_vera_tbEmpleados_empl_Id");

                entity.HasOne(d => d.meto)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.meto_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturas_vera_tbMetodosPagos_meto_Id");

                entity.HasOne(d => d.sucu)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.sucu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fact_tbFacturas_vera_tbSucursales_sucu_Id");
            });

            modelBuilder.Entity<tbFardos>(entity =>
            {
                entity.HasKey(e => e.fard_Id)
                    .HasName("PK_vera_tbFardos_fard_Id");

                entity.ToTable("tbFardos", "vera");

                entity.Property(e => e.fard_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.fard_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.fard_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.fard_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbFardosProveedor>(entity =>
            {
                entity.HasKey(e => e.fapr_Id)
                    .HasName("PK_vera_tbFardosProveedor_fapr_Id");

                entity.ToTable("tbFardosProveedor", "vera");

                entity.Property(e => e.fapr_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.fapr_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.fapr_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.fard)
                    .WithMany(p => p.tbFardosProveedor)
                    .HasForeignKey(d => d.fard_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbFardosProveedor_vera_tbFardos_fard_Id");

                entity.HasOne(d => d.prov)
                    .WithMany(p => p.tbFardosProveedor)
                    .HasForeignKey(d => d.prov_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbFardosProveedor_vera_tbProveedores_prov_Id");
            });

            modelBuilder.Entity<tbMarcas>(entity =>
            {
                entity.HasKey(e => e.marc_Id)
                    .HasName("PK_vera_tbMarcas_marc_Id");

                entity.ToTable("tbMarcas", "vera");

                entity.HasIndex(e => e.marc_Descripcion, "UQ_mant_tbCategorias_marc_Descripcion")
                    .IsUnique();

                entity.Property(e => e.marc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.marc_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.marc_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.marc_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbMetodosPagos>(entity =>
            {
                entity.HasKey(e => e.meto_Id)
                    .HasName("PK_fact_tbMetodoPago_meto_Id");

                entity.ToTable("tbMetodosPagos", "fact");

                entity.Property(e => e.meto_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.meto_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.meto_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.meto_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK_mant_tbMunicipios_muni_Id");

                entity.ToTable("tbMunicipios", "mant");

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.muni_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.muni_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.dept)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.dept_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mant_tbMunicipios_dept_Id");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id)
                    .HasName("PK_acce_tbPantallas_pant_Id");

                entity.ToTable("tbPantallas", "acce");

                entity.HasIndex(e => e.pant_Identificador, "UQ_acce_tbPantallas_pant_Identificador")
                    .IsUnique();

                entity.HasIndex(e => e.pant_Nombre, "UQ_acce_tbPantallas_pant_Nombre")
                    .IsUnique();

                entity.HasIndex(e => e.pant_href, "UQ_acce_tbPantallas_pant_href")
                    .IsUnique();

                entity.Property(e => e.pant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pant_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pant_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.pant_Identificador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pant_href)
                    .IsRequired()
                    .HasMaxLength(70);
            });

            modelBuilder.Entity<tbPantallasPorRol>(entity =>
            {
                entity.HasKey(e => e.pantrol_Id)
                    .HasName("PK_acce_tbPantallasPorRol_pantrol_Id");

                entity.ToTable("tbPantallasPorRol", "acce");

                entity.Property(e => e.pantrol_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pantrol_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pantrol_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.pant)
                    .WithMany(p => p.tbPantallasPorRol)
                    .HasForeignKey(d => d.pant_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbPantallasPorRol_tbPantallas_pant_Id");

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbPantallasPorRol)
                    .HasForeignKey(d => d.role_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbPantallasPorRol_tbRoles_role_Id");
            });

            modelBuilder.Entity<tbPrendas>(entity =>
            {
                entity.HasKey(e => e.pren_Id)
                    .HasName("PK_vera_tbPrendas_pren_Id");

                entity.ToTable("tbPrendas", "vera");

                entity.Property(e => e.pren_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pren_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pren_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pren_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pren_Imagen).IsRequired();

                entity.Property(e => e.pren_Precio).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.pren_Talla)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.prend_EstadoTienda).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.cate)
                    .WithMany(p => p.tbPrendas)
                    .HasForeignKey(d => d.cate_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbPrendas_cate_Id_vera_tbCategorias_cate_Id");

                entity.HasOne(d => d.fard)
                    .WithMany(p => p.tbPrendas)
                    .HasForeignKey(d => d.fard_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbPrendas_fard_Id_vera_tbFardos_fard_Id");

                entity.HasOne(d => d.marc)
                    .WithMany(p => p.tbPrendas)
                    .HasForeignKey(d => d.marc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbPrendas_marc_Id_vera_tbMarcas_marc_Id");
            });

            modelBuilder.Entity<tbProveedores>(entity =>
            {
                entity.HasKey(e => e.prov_Id)
                    .HasName("PK_vera_tbProveedores_prov_Id");

                entity.ToTable("tbProveedores", "vera");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.prov_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.prov_Direccion).HasMaxLength(200);

                entity.Property(e => e.prov_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.prov_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.prov_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.prov_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.prov_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbProveedores)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_vera_tbProveedores_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK_acce_tbRoles_role_Id");

                entity.ToTable("tbRoles", "acce");

                entity.HasIndex(e => e.role_Descripcion, "UQ_role_tbRoles_role_Descripcion")
                    .IsUnique();

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.role_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.role_FechaModifica).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.sucu_Id)
                    .HasName("PK_vera_tbSucursales_sucu_Id");

                entity.ToTable("tbSucursales", "vera");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.sucu_Direccion).HasMaxLength(200);

                entity.Property(e => e.sucu_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.sucu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("PK_vera_tbSucursales_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.user_Id)
                    .HasName("PK_acce_tbUsuarios_user_Id");

                entity.ToTable("tbUsuarios", "acce");

                entity.HasIndex(e => e.user_NombreUsuario, "UQ_acce_tbUsuarios_user_NombreUsuario")
                    .IsUnique();

                entity.Property(e => e.user_Contraseña)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.user_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.user_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.user_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.user_NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}